{"version":3,"sources":["fetchImages.js","index.js"],"names":["BASE_URL","API_Key","fetchImages","requestInInput","fetch","then","respons","ok","Error","statusText","console","log","json","DEBOUNCE_DELAY","requestFromUser","searchFormRef","document","querySelector","inputRef","onRequestFromUser","event","preventDefault","value","HTTPServise","addEventListener"],"mappings":";AAuBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAvBD,MAAMA,EAAW,2BACXC,EAAU,qCAUT,SAASC,EAAYC,GAEjBC,OAAAA,SAASJ,SAAgBC,OAAaE,6DACxCE,KAAKC,IACE,IAACA,EAAQC,GACPC,MAAAA,MAAMF,EAAQG,YAEjBC,OAAAA,QAAQC,IAAIL,EAAQM;;;;ACKlC,aAvBD,IAAA,EAAA,EAAA,QAAA,kBAuBC,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAtBD,QAAA,oBAGA,MAAMC,EAAiB,IACvB,IAAIC,EAAkB,GAEtB,MAAMC,EAAgBC,SAASC,cAAc,gBACvCC,EAAWF,SAASC,cAAc,wBAMxC,SAASE,EAAkBC,GACvBA,EAAMC,iBAGNP,EAAkBI,EAASI,MAC3BZ,QAAQC,IAAIG,GAEZJ,QAAQC,IAAI,+BACZY,EAAYrB,YAAYY,GAV5BC,EAAcS,iBAAiB,SAAUL","file":"src.19c8a3c9.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = \"https://pixabay.com/api/\";\nconst API_Key = \"24366692-ce9347f3f27462bce5924cca4\";\n// const options = {\n//     headers: {\n//     key: API_Key,\n//     //q: - термин для поиска. То, что будет вводить пользователь.\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: 'true',\n// }\n\nexport function fetchImages(requestInInput) {\n\n    return fetch(`${BASE_URL}?key=${API_Key}&q=${requestInInput}&image_type=photo&orientation=horizontal&safesearch=true`)\n        .then(respons => {\n            if (!respons.ok) {\n            throw Error(respons.statusText);\n        }\n        return console.log(respons.json());\n        })\n        // .catch(() => {\n        //     return console.log(respons);\n        // })\n}","import * as HTTPServise from './fetchImages';\nimport './sass/main.scss';\n//import debounce from 'lodash.debounce';\n\nconst DEBOUNCE_DELAY = 300;\nlet requestFromUser = '';\n\nconst searchFormRef = document.querySelector('.search-form');\nconst inputRef = document.querySelector('.search-form > input');\n\n\n//searchFormRef.addEventListener('submit', debounce(onRequestFromUser, DEBOUNCE_DELAY));\nsearchFormRef.addEventListener('submit', onRequestFromUser);\n\nfunction onRequestFromUser(event) {\n    event.preventDefault();\n\n    //requestFromUser = event.target.value;\n    requestFromUser = inputRef.value;\n    console.log(requestFromUser);\n    //requestFromUser = requestFromUser.trim();\n    console.log(\"будем вызывать  fetchImages\");\n    HTTPServise.fetchImages(requestFromUser);\n}\n "]}